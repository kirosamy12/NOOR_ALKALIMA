{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANSI\\\\Desktop\\\\noor-alkalima\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(Cookies.get('token'));\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          Cookies.remove('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      Cookies.set('token', newToken, {\n        expires: 7\n      });\n      setToken(newToken);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'فشل تسجيل الدخول'\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      Cookies.set('token', newToken, {\n        expires: 7\n      });\n      setToken(newToken);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'فشل إنشاء الحساب'\n      };\n    }\n  };\n  const logout = () => {\n    Cookies.remove('token');\n    setToken(null);\n    setUser(null);\n  };\n  const updateProfile = async updates => {\n    try {\n      const response = await api.put('/auth/profile', updates);\n      setUser(response.data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'فشل تحديث الملف الشخصي'\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"ZIcZC2BQ8jRYWUiEPNy4xo97JlA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Cookies","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","get","initializeAuth","response","data","error","console","remove","login","email","password","post","newToken","userData","set","expires","success","_error$response","_error$response$data","register","name","_error$response2","_error$response2$data","logout","updateProfile","updates","put","_error$response3","_error$response3$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MANSI/Desktop/noor-alkalima/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(Cookies.get('token'));\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/me');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          console.error('Auth initialization error:', error);\r\n          Cookies.remove('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      Cookies.set('token', newToken, { expires: 7 });\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'فشل تسجيل الدخول' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { name, email, password });\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      Cookies.set('token', newToken, { expires: 7 });\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'فشل إنشاء الحساب' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    Cookies.remove('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', updates);\r\n      setUser(response.data.user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'فشل تحديث الملف الشخصي' \r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}